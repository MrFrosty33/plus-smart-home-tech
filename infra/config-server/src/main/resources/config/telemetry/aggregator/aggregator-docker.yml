logging:
  level:
    root: INFO
    ru.yandex.practicum.aggregator: TRACE

topics:
  sensors: "telemetry.sensors.v1"
  snapshots: "telemetry.snapshots.v1"
  hubs: "telemetry.hubs.v1"

kafka-aggregator:
  producer:
    properties:
      bootstrap.servers: "kafka:29092"
      group.id: "telemetry-aggregator-producer-v1"
      key.serializer: "org.apache.kafka.common.serialization.VoidSerializer"
      value.serializer: "ru.yandex.practicum.kafka.serializer.GeneralAvroSerializer"

  sensor-event-consumer:
    properties:
      bootstrap.servers: "kafka:29092"
      group.id: "telemetry-aggregator-sensor-event-consumers-v1"
      key.deserializer: "org.apache.kafka.common.serialization.VoidDeserializer"
      value.deserializer: "ru.yandex.practicum.kafka.serializer.SensorEventDeserializer"

      max.poll.records: 100
      fetch.max.bytes: 3072000
      max.partition.fetch.bytes: 307200

      auto.offset.reset: "latest"
      isolation.level: "read_committed"
      enable.auto.commit: false

  sensor-snapshot-consumer:
    properties:
      bootstrap.servers: "kafka:29092"
      group.id: "telemetry-aggregator-sensor-snapshot-consumers-v1"
      key.deserializer: "org.apache.kafka.common.serialization.VoidDeserializer"
      value.deserializer: "ru.yandex.practicum.kafka.serializer.SensorSnapshotDeserializer"

      max.poll.records: 100
      fetch.max.bytes: 3072000
      max.partition.fetch.bytes: 307200

      auto.offset.reset: "latest"
      isolation.level: "read_committed"
      enable.auto.commit: false